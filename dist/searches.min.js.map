{"version":3,"sources":["basinsearch/basinsearch.ts","geosearch/geosearch.ts","lastsearch/lastsearch.ts","lgasearch/lgasearch.ts","searches/searches.ts","templates.ts"],"names":["angular","BasinsearchServiceProvider","basinsUrl","basinShapeUrl","baseUrl","basinData","this","setReferenceUrl","url","setShapeUrl","setBaseUrl","$get","$q","$rootScope","$timeout","httpData","searchMapService","service","load","get","cache","then","response","basins","data","zoomToLocation","region","pan","goTo","polygon","bbox","type","coordinates","xMin","yMin","yMax","xMax","broadcastData","from","id","show","name","$broadcast","module","directive","$log","basinService","restrict","transclude","templateUrl","link","scope","element","cancel","timeout","info","nameFilter","changing","provider","filter","list","max","lowerFilter","count","toLowerCase","some","item","indexOf","push","google","googleService","SPREAD_DEGREES","controller","$scope","values","zoom","marker","description","getAddressDetails","results","feature","geometry","lat","lon","properties","address","debug","error","factory","geocoder","maps","Geocoder","places","AutocompleteService","types","e","digester","deferred","defer","geocode","status","GeocoderStatus","OK","$apply","reject","resolve","location","lng","formatted_address","promise","$document","lastSearchService","keyupHandler","keyEvent","which","stopPropagation","preventDefault","close","on","toggle","search","displayed","hide","clear","listen","noListen","listener","event","drawing","destroy","getDrawer","draw","erase","isShowing","isDrawn","$on","LgasearchServiceProvider","statesUrl","lgasUrl","lgaShapeUrl","lgaData","lgas","states","when","console","log","lgaService","explorer","searchService","replace","activate","state","searches","forEach","active","getSearches","showSearchButton","add","template","require","label","key","attrs","ctrl","run","$templateCache","put"],"mappings":"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","file":"searches.min.js","sourcesContent":["/// <reference path=\"../../../typings/index.d.ts\" />\r\n\r\n/*\r\n * Copyright 2015 Geoscience Australia (http://www.ga.gov.au/copyright.html)\r\n */\r\n\r\n(function(angular: ng.IAngularStatic) {\r\n\r\n\t'use strict';\r\n\r\n\tangular.module(\"exp.search.basinsearch\", ['exp.search.map.service'])\r\n\r\n\t\t.directive(\"basinSearch\", ['$log', '$timeout', 'basinService', function($log: any, $timeout: any, basinService: any) {\r\n\t\t\treturn {\r\n\t\t\t\trestrict: \"AE\",\r\n\t\t\t\ttransclude: true,\r\n\t\t\t\ttemplateUrl: \"searches/basinsearch/basinsearch.html\",\r\n\t\t\t\tlink: function(scope: any, element: any) {\r\n\t\t\t\t\tvar timeout: any;\r\n\r\n\t\t\t\t\tbasinService.load().then(function(data: any): void {\r\n\t\t\t\t\t\tscope.basinData = data;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tscope.changing = function(): void {\r\n\t\t\t\t\t\t$log.info(\"Cancel close\");\r\n\t\t\t\t\t\t$timeout.cancel(timeout);\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tscope.cancel = cancel;\r\n\r\n\t\t\t\t\tscope.zoomToLocation = function(region: any): void {\r\n\t\t\t\t\t\tbasinService.zoomToLocation(region);\r\n\t\t\t\t\t\tcancel();\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tfunction cancel(): void {\r\n\t\t\t\t\t\t$timeout.cancel(timeout);\r\n\t\t\t\t\t\ttimeout = $timeout(function() {\r\n\t\t\t\t\t\t\t$log.info(\"Clear filter\");\r\n\t\t\t\t\t\t\tscope.nameFilter = \"\";\r\n\t\t\t\t\t\t}, 7000);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}])\r\n\r\n\t\t.provider(\"basinService\", BasinsearchServiceProvider)\r\n\r\n\t\t.filter(\"basinFilterList\", function() {\r\n\t\t\treturn function(list: any, filter: any, max: number) {\r\n\t\t\t\tvar response: any[] = [],\r\n\t\t\t\t\tlowerFilter: any, count: number;\r\n\r\n\t\t\t\tif (!filter) {\r\n\t\t\t\t\treturn response;\r\n\t\t\t\t}\r\n\t\t\t\tif (!max) {\r\n\t\t\t\t\tmax = 50;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlowerFilter = filter.toLowerCase();\r\n\r\n\t\t\t\tif (list) {\r\n\t\t\t\t\tcount = 0;\r\n\t\t\t\t\tlist.some(function(item: any) {\r\n\t\t\t\t\t\tif (item.name.toLowerCase().indexOf(lowerFilter) > -1) {\r\n\t\t\t\t\t\t\tresponse.push(item);\r\n\t\t\t\t\t\t\tcount++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn count > max;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\treturn response;\r\n\t\t\t};\r\n\t\t});\r\n\r\n\tfunction BasinsearchServiceProvider() : any {\r\n\t\tvar basinsUrl: string = \"service/basinsearch/basins\",\r\n\t\t\tbasinShapeUrl: string = \"service/basinsearch/basin/\",\r\n\t\t\tbaseUrl: string = '',\r\n\t\t\tbasinData: any = {};\r\n\r\n\t\tthis.setReferenceUrl = function(url: string) {\r\n\t\t\tbasinsUrl = url;\r\n\t\t};\r\n\r\n\t\tthis.setShapeUrl = function(url: string) {\r\n\t\t\tbasinShapeUrl = url;\r\n\t\t};\r\n\r\n\t\tthis.setBaseUrl = function(url: string) {\r\n\t\t\tbaseUrl = url;\r\n\t\t};\r\n\r\n\t\tthis.$get = ['$q', '$rootScope', '$timeout', 'httpData', 'searchMapService',\r\n\t\t\t\tfunction basinServiceFactory($q: any, $rootScope:any, $timeout: any, httpData: any, searchMapService: Searches.ISearchMapService) {\r\n\t\t\tvar service: any = {\r\n\t\t\t\tload: function() {\r\n\t\t\t\t\treturn httpData.get(baseUrl + basinsUrl, { cache: true }).then(function(response: any) {\r\n\t\t\t\t\t\tbasinData.basins = response.data.basins;\r\n\t\t\t\t\t\treturn basinData;\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\r\n\t\t\t\tzoomToLocation: function(region: any) {\r\n\t\t\t\t\tvar bbox: any = region.bbox;\r\n\t\t\t\t\tvar polygon: GeoJSON.Polygon = {\r\n\t\t\t\t\t\ttype: \"Polygon\",\r\n\t\t\t\t\t\tcoordinates: [[\r\n\t\t\t\t\t\t\t[bbox.xMin, bbox.yMin],\r\n\t\t\t\t\t\t\t[bbox.xMin, bbox.yMax],\r\n\t\t\t\t\t\t\t[bbox.xMax, bbox.yMax],\r\n\t\t\t\t\t\t\t[bbox.xMax, bbox.yMin],\r\n\t\t\t\t\t\t\t[bbox.xMin, bbox.yMin]\r\n\t\t\t\t\t\t]]\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tvar broadcastData: Searches.ISearchPerformed = {\r\n                      \tfrom: \"Basins search\",\r\n                      \ttype: \"GeoJSONUrl\",\r\n                      \turl: baseUrl + basinShapeUrl + region.id,\r\n\t\t\t \t\t\tpan: pan,\r\n\t\t\t\t\t\tshow: true,\r\n                        name: region.name,\r\n                        polygon: polygon\r\n\t\t\t\t\t};\r\n\r\n                    $rootScope.$broadcast('search.performed', broadcastData);\r\n\r\n\t\t\t\t\tpan();\r\n\r\n\t\t\t\t\tfunction pan() {\r\n\t\t\t\t\t\tsearchMapService.goTo(polygon);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\treturn service;\r\n\t\t}];\r\n\t}\r\n\r\n})(angular);\r\n","/// <reference path=\"../../../typings/index.d.ts\" />\r\n\r\n/*\r\n * Copyright 2015 Geoscience Australia (http://www.ga.gov.au/copyright.html)\r\n */\r\n\r\ndeclare var google: any;\r\n\r\ninterface IGeoSearchResults {\r\n    address: string;\r\n    lat: number;\r\n    lon: number;\r\n}\r\n\r\n(function(angular: ng.IAngularStatic, google:any) {\r\n\r\n'use strict';\r\n\r\n\r\nangular.module('exp.search.geosearch', ['ngAutocomplete'])\r\n\r\n.directive('geoSearch', ['$log', '$q', '$rootScope', 'googleService', 'searchMapService',\r\n                       function($log : any, $q : any, $rootScope:any, googleService : any, searchMapService:any) {\r\n    var SPREAD_DEGREES : number = 0.1;\r\n    return {\r\n        templateUrl : 'searches/geosearch/geosearch.html',\r\n        controller:['$scope', function($scope : any) {\r\n            // Place holders for the google response.\r\n            $scope.values = {\r\n                from:{}\r\n            };\r\n\r\n            $scope.zoom = function(marker : any) {\r\n                var promise:any,\r\n                    promises:any = [];\r\n\r\n                if(!$scope.values.from.description) {\r\n                    return;\r\n                }\r\n\r\n                googleService.getAddressDetails($scope.values.from.description, $scope).then(function(results: IGeoSearchResults) {\r\n                    var feature: GeoJSON.Feature = {\r\n                        type: 'Feature',\r\n                        geometry: {\r\n                            type: 'Point',\r\n                            coordinates: [results.lat, results.lon]\r\n                        },\r\n                        properties: {\r\n                            name: results.address\r\n                        }\r\n                    };\r\n\r\n                    var broadcastData: Searches.ISearchPerformed = {\r\n                        from: \"Google search\",\r\n                        name: results.address,\r\n                        type: \"GeoJSONPoint\",\r\n                        pan: function() {\r\n                          pan();\r\n                        },\r\n                        data: feature\r\n                    };\r\n                    var xMin = results.lon - SPREAD_DEGREES;\r\n                    var xMax = results.lon + SPREAD_DEGREES;\r\n                    var yMin = results.lat - SPREAD_DEGREES;\r\n                    var yMax = results.lat + SPREAD_DEGREES;\r\n\r\n\t\t\t\t\tvar polygon: GeoJSON.Polygon = {\r\n\t\t\t\t\t\ttype: \"Polygon\",\r\n\t\t\t\t\t\tcoordinates: [[\r\n\t\t\t\t\t\t\t[xMin, yMin],\r\n\t\t\t\t\t\t\t[xMin, yMax],\r\n\t\t\t\t\t\t\t[xMax, yMax],\r\n\t\t\t\t\t\t\t[xMax, yMin],\r\n\t\t\t\t\t\t\t[xMin, yMin]\r\n\t\t\t\t\t\t]]\r\n\t\t\t\t\t};\r\n\r\n                    $log.debug('Received the results for from');\r\n                    $scope.values.from.results = results;\r\n                    if(results) {\r\n                        pan();\r\n                        $rootScope.$broadcast('search.performed', broadcastData);\r\n                    }\r\n                    // Hide the dialog.\r\n                    $scope.item = '';\r\n                    return results;\r\n\r\n                    function pan() {\r\n                        searchMapService.goTo(polygon);\r\n                    }\r\n                }, function(error:any) {\r\n                    $log.debug('Failed to complete the from lookup.');\r\n                })\r\n            };\r\n        }]\r\n    };\r\n}])\r\n\r\n.factory('googleService', ['$log', '$q', function($log : any, $q : any) {\r\n    var geocoder:any, service:any;\r\n    try {\r\n        geocoder = new google.maps.Geocoder();\r\n        service = new google.maps.places.AutocompleteService(null, {\r\n                        types: ['geocode']\r\n                    });\r\n    } catch(e) {\r\n        $log.debug(\"Catching google error that manifests itself when debugging in Firefox only\");\r\n    }\r\n\r\n    return {\r\n        getAddressDetails: function(address:any, digester:any) {\r\n            var deferred = $q.defer();\r\n            geocoder.geocode({ address: address, region: \"au\" }, function(results:any, status:any) {\r\n                if (status != google.maps.GeocoderStatus.OK) {\r\n                    digester.$apply(function() {\r\n                        deferred.reject(\"Failed to find address\");\r\n                    });\r\n                } else {\r\n                    digester.$apply(function() {\r\n                        deferred.resolve({\r\n                            lat: results[0].geometry.location.lat(),\r\n                            lon: results[0].geometry.location.lng(),\r\n                            address: results[0].formatted_address\r\n                        });\r\n                    });\r\n                }\r\n            });\r\n            return deferred.promise;\r\n        }\r\n    };\r\n}]);\r\n\r\n})(angular, google);\r\n","/// <reference path=\"../../../typings/index.d.ts\" />\r\n/*\r\n * Copyright 2015 Geoscience Australia (http://www.ga.gov.au/copyright.html)\r\n */\r\n\r\ninterface LastSearchService {\r\n  show(): void;\r\n  hide(): void;\r\n  data: any;\r\n  clear(): void;\r\n  viewer: any;\r\n}\r\n\r\ninterface LastSearchData {\r\n  search: any;\r\n}\r\n\r\n(function(angular: ng.IAngularStatic) {\r\n'use strict';\r\n\r\n/*\r\n * Wiring\r\n */\r\nangular.module('exp.search.lastsearch', [])\r\n\r\n.directive('expLastSearch', ['$document', 'lastSearchService', '$rootScope',\r\n          function($document: any, lastSearchService: LastSearchService, $rootScope: any) {\r\n  return {\r\n    restrict : 'AE',\r\n    transclude : true,\r\n    templateUrl: 'searches/lastsearch/lastsearch.html',\r\n    link : function(scope:any, element:any) {\r\n      scope.data = lastSearchService.data();\r\n      \r\n      $document.on(\"keyup\", keyupHandler);\r\n\r\n      scope.toggle = function () {\r\n        if ((scope.data.search.displayed = !scope.data.search.displayed)) {\r\n          lastSearchService.show();\r\n        } else {\r\n          lastSearchService.hide();\r\n        }\r\n      };\r\n      \r\n      scope.pan = function() {\r\n        scope.data.search.pan();\r\n      }\r\n      \r\n      scope.close = function() {\r\n          $rootScope.$broadcast('search.cleared');\r\n          lastSearchService.clear();\r\n      }\r\n      \r\n      function keyupHandler(keyEvent: any) {\r\n    \t\t\tif(keyEvent.which == 27) {\r\n    \t\t\t\tkeyEvent.stopPropagation();\r\n    \t\t\t\tkeyEvent.preventDefault();\r\n    \t\t\t\tscope.$apply(function() {\r\n        \t\t\t\tscope.close();\r\n    \t\t\t\t});\r\n    \t\t\t}\r\n    \t\t}\r\n    }\r\n  };\r\n}]) \r\n\r\n.provider('lastSearchService', [function () {\r\n    var listen = true;\r\n    \r\n    this.noListen = function() {\r\n      listen = false;\r\n    }\r\n    \r\n    this.$get = ['$log', '$rootScope', 'searchMapService', function ($log: ng.ILogService, $rootScope: ng.IRootScopeService, searchMapService: any) {\r\n    \r\n      var data:LastSearchData = {\r\n        search: null\r\n      };\r\n      var drawing: any;\r\n    \r\n      var service = {\r\n        show: function() {\r\n          drawing.draw();\r\n        },\r\n    \r\n        hide: function() {\r\n          if(drawing) {\r\n            drawing.erase();\r\n          }       \r\n        },\r\n        data: function() {\r\n          return data;\r\n        },\r\n      \r\n        isShowing: function() {\r\n          drawing.isDrawn();\r\n        },\r\n      \r\n        clear: function (){\r\n          this.hide();\r\n          data.search = null;\r\n        }\r\n    };\r\n    \r\n    $rootScope.$on('search.performed', listener);\r\n    \r\n    function listener(event: any, search: any) {\r\n      if (drawing) {\r\n        drawing.destroy();\r\n      }\r\n      drawing = searchMapService.getDrawer(search);\r\n      if(listen) {\r\n        data.search = search;\r\n      }\r\n          \r\n      if (search.show) {\r\n        search.displayed = true;\r\n        drawing.draw();\r\n      }\r\n    };\r\n   \r\n    return service;\r\n  }];\r\n}]);\r\n\r\n})(angular);\r\n","/// <reference path=\"../../../typings/index.d.ts\" />\r\n/*\r\n * Copyright 2015 Geoscience Australia (http://www.ga.gov.au/copyright.html)\r\n */\r\n\r\n(function(angular: ng.IAngularStatic) {\r\n'use strict';   \r\n\r\nangular.module(\"exp.search.lgasearch\", [])\r\n\r\n.directive(\"lgaSearch\", ['$log', '$timeout', 'lgaService', function($log:any, $timeout:any, lgaService:any) {\r\n    return {\r\n        restrict : \"AE\",\r\n        transclude:true,\r\n        templateUrl : \"searches/lgasearch/lgasearch.html\", \r\n        link : function(scope:any, element:any) {\r\n            var timeout:any;\r\n            \r\n            lgaService.load().then(function(data:any) :void {\r\n                scope.lgaData = data;\r\n            });\r\n            \r\n            scope.changing = function():void {\r\n                $log.info(\"Cancel close\");\r\n                $timeout.cancel(timeout);\r\n            };\r\n            \r\n            scope.cancel = cancel;\r\n            \r\n            scope.zoomToLocation = function(region:any) : void {\r\n                lgaService.zoomToLocation(region);\r\n                cancel();\r\n            };\r\n            \r\n            function cancel():void {\r\n                $timeout.cancel(timeout);\r\n                timeout = $timeout(function() {\r\n                    $log.info(\"Clear filter\");\r\n                    scope.nameFilter = \"\";\r\n                }, 7000);               \r\n            }\r\n        }\r\n    };\r\n}])\r\n\r\n.provider(\"lgaService\", LgasearchServiceProvider)\r\n\r\n.filter(\"lgaFilterList\", function() {\r\n    return function(list:any, filter:any, max:number) {\r\n        var response:any[] = [],\r\n            lowerFilter:any, count:number;\r\n        \r\n        if(!filter) {\r\n            return response;\r\n        }\r\n        if(!max) {\r\n            max = 50;\r\n        }\r\n        \r\n        lowerFilter = filter.toLowerCase();\r\n        \r\n        if(list) {\r\n            count = 0;\r\n            list.some(function(item:any) {\r\n                if(item.name.toLowerCase().indexOf(lowerFilter) > -1) {\r\n                    response.push(item);\r\n                    count++;\r\n                }\r\n                return count > max;\r\n            });\r\n        }\r\n        return response;\r\n    };\r\n});\r\n\r\nfunction LgasearchServiceProvider() : any {\r\n    var statesUrl:string = \"service/lgasearch/states\",\r\n        lgasUrl:string = \"service/lgasearch/lgas\",\r\n        lgaShapeUrl:string = \"service/lgasearch/lga/\",\r\n        lgaData:any = {},\r\n        lgaTimeout:any,\r\n        lgaLayer:any,\r\n        lgaFadeLayer:any, \r\n        removePrimitiveTimeout : any,\r\n        scene : any;\r\n    \r\n    this.setReferenceUrl = function(url:string) {\r\n        lgasUrl = url;\r\n    };  \r\n    \r\n    this.setShapeUrl = function(url:string) {\r\n        lgaShapeUrl = url;\r\n    };  \r\n    \r\n    this.$get = ['$q', '$scope','$rootScope', '$timeout', 'httpData', 'searchMapService', function lgaServiceFactory($q:any,$scope:any, $rootScope:any, $timeout:any, httpData:any, searchMapService:any) {\r\n        var service:any = {\r\n            load : function() {\r\n                httpData.get(lgasUrl, {cache : true}).then(function(response:any) {\r\n                    lgaData.lgas = response.data.lgas;\r\n                }); \r\n                \r\n                httpData.get(statesUrl, {cache : true}).then(function(response:any) {\r\n                    lgaData.states = response.data.states;\r\n                });\r\n                return $q.when(lgaData);\r\n            },\r\n            \r\n            zoomToLocation : function(region:any) {\r\n                var geocoder:any = new google.maps.Geocoder();\r\n                geocoder.geocode({ address: region.name, region: \"au\" }, function(results:any, status:any) {\r\n                    if (status != google.maps.GeocoderStatus.OK) {\r\n                        console.log(\"No result found\")\r\n                    } else {\r\n                      var  lat=results[0].geometry.location.lat();\r\n                      var  lon=results[0].geometry.location.lng();\r\n                        var feature: GeoJSON.Feature = {\r\n                            type: 'Feature',\r\n                            geometry: {\r\n                                type: 'Point',\r\n                                coordinates: [lat, lon]\r\n                            },\r\n                            properties: {\r\n                                name: null\r\n                            }\r\n                        };\r\n                        var bbox:any = region.bbox;\r\n\r\n                        var polygon: GeoJSON.Polygon = {\r\n                            type: \"Polygon\",\r\n                            coordinates: [[\r\n                                [bbox.xMin, bbox.yMin],\r\n                                [bbox.xMin, bbox.yMax],\r\n                                [bbox.xMax, bbox.yMax],\r\n                                [bbox.xMax, bbox.yMin],\r\n                                [bbox.xMin, bbox.yMin]\r\n                            ]]\r\n                        };\r\n\r\n                        var broadcastData: Searches.ISearchPerformed = {\r\n                            from: \"LGA search\",\r\n                            type: \"GeoJSONUrl\",\r\n                            url: lgaShapeUrl + region.id + '/geojson',\r\n                            pan: pan,\r\n                            show: true,\r\n                            name: region.name,\r\n                            polygon: polygon,\r\n                            data:feature\r\n                        };\r\n\r\n                        if(region.id) {\r\n                            $rootScope.$broadcast('search.performed', broadcastData);\r\n                        }\r\n                        pan();\r\n                        function pan() {\r\n                            searchMapService.goTo(polygon);\r\n                        }\r\n\r\n                    }\r\n                });\r\n\r\n            }\r\n        };  \r\n        return service;\r\n    }];\r\n}\r\n})(angular);","/// <reference path=\"../../../typings/index.d.ts\" />\r\n\r\n/*\r\n * Copyright 2015 Geoscience Australia (http://www.ga.gov.au/copyright.html)\r\n */\r\n\r\nmodule explorer.search {\r\n'use strict';\r\n\r\nangular.module(\"exp.search.searches\", ['exp.search.lastsearch'])\r\n\r\n.directive('searchSearches', ['searchService', function(searchService: any) {\r\n    return {\r\n        restrict: \"AE\",\r\n        replace: true,\r\n        transclude: true,\r\n        templateUrl: 'searches/searches/searches.html',\r\n        scope: {\r\n            name : \"@\"\r\n        },\r\n        controller: ['$scope', function($scope:any) {\r\n            $scope.state = {\r\n                showSearchButton : true,\r\n                searches : []\r\n            }\r\n                    \r\n            $scope.switch = function (data:any) {\r\n                activate(data);\r\n            };\r\n            \r\n            this.add = function (data:any) {\r\n                console.log(\"Adding\");\r\n                $scope.state.searches.push(data);\r\n            };\r\n            \r\n            this.active = function (data:any) {\r\n                activate(data);\r\n            };        \r\n            \r\n            function activate(data:any) {\r\n                $scope.state.searches.forEach(function (item:any) {\r\n                    item.active = false;\r\n                });\r\n                data.active = true;\r\n                if($scope.name) {\r\n                    searchService.getSearches()[$scope.name] = data;\r\n                }                        \r\n            }\r\n        }]\r\n    };\r\n}]) \r\n\r\n.directive('searchSearch', [function() {\r\n    return {\r\n        //replace : true,\r\n        template:\"<div ng-transclude ng-show='active'></div>\",\r\n        transclude:true,\r\n        require: \"^searchSearches\",\r\n        scope: {\r\n            label: \"@\",\r\n            key: \"@\"\r\n        },\r\n        link : function(scope:any, element: any, attrs: any, ctrl: any) {\r\n           scope.active = !!attrs.default;\r\n           ctrl.add(scope); \r\n        }\r\n    };\r\n}])\r\n    \r\n.factory('searchService', [function() {\r\n    var searches: any = {};\r\n    var service: any = {};\r\n    \r\n    service.getSearches = function() {\r\n      return searches;  \r\n    };\r\n    \r\n    return service;\r\n}]);\r\n   \r\n}",null],"sourceRoot":"/source/"}