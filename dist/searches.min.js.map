{"version":3,"sources":["searches.min.js","basinsearch/basinsearch.ts","geosearch/geosearch.ts","lastsearch/lastsearch.ts","searches/searches.ts","lgasearch/lgasearch.ts","templates.ts"],"names":["angular","BasinsearchServiceProvider","basinsUrl","url","basinShapeUrl","baseUrl","BasinsearchServiceProvider.basinServiceFactory","httpData","get","cache","then","response","basinData","basins","data","pan","bbox","region","polygon","type","coordinates","xMin","yMin","yMax","xMax","broadcastData","from","id","show","name","$rootScope","$broadcast","module","directive","$log","$timeout","basinService","restrict","transclude","templateUrl","link","scope","element","cancel","info","nameFilter","timeout","load","changing","zoomToLocation","provider","filter","list","max","lowerFilter","count","toLowerCase","some","item","indexOf","push","google","$q","googleService","searchMapService","SPREAD_DEGREES","controller","$scope","values","zoom","marker","description","getAddressDetails","results","feature","geometry","lat","lon","properties","address","debug","error","factory","service","geocoder","maps","Geocoder","places","AutocompleteService","types","e","digester","deferred","defer","geocode","status","GeocoderStatus","OK","$apply","reject","resolve","location","lng","formatted_address","promise","$document","lastSearchService","keyupHandler","keyEvent","close","on","toggle","search","displayed","hide","clear","listen","this","noListen","$get","listener","event","drawing","draw","erase","isShowing","isDrawn","$on","explorer","explorer.search","replace","activate","active","state","showSearchButton","searches","add","console","log","template","require","label","key","attrs","ctrl","getSearches","LgasearchServiceProvider","lgasUrl","lgaShapeUrl","LgasearchServiceProvider.lgaServiceFactory","lgaData","lgas","statesUrl","states","when","lgaService","run","$templateCache","put"],"mappings":"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","file":"searches.min.js","sourcesContent":["/***\r\n  * ExplorerSearches - Explorer searches components.\r\n  * @version v0.0.1-SNAPSHOT\r\n  * @link http://www.ga.gov.au/\r\n  * @license Copyright 2015 Geoscience Australia (http://www.ga.gov.au/copyright.html)\r\n  */\r\n!function(e){\"use strict\";function t(){var e=\"service/basinsearch/basins\",t=\"service/basinsearch/basin/\",n=\"\",a={};this.setReferenceUrl=function(t){e=t},this.setShapeUrl=function(e){t=e},this.setBaseUrl=function(e){n=e},this.$get=[\"$q\",\"$rootScope\",\"$timeout\",\"httpData\",\"searchMapService\",function(r,o,s,i,c){var l={load:function(){return i.get(n+e,{cache:!0}).then(function(e){return a.basins=e.data.basins,a})},zoomToLocation:function(e){function a(){c.goTo(s)}var r=e.bbox,s={type:\"Polygon\",coordinates:[[[r.xMin,r.yMin],[r.xMin,r.yMax],[r.xMax,r.yMax],[r.xMax,r.yMin],[r.xMin,r.yMin]]]},i={from:\"Basins search\",type:\"GeoJSONUrl\",url:n+t+e.id,pan:a,show:!0,name:e.name,polygon:s};o.$broadcast(\"search.performed\",i),a()}};return l}]}e.module(\"exp.search.basinsearch\",[\"exp.search.map.service\"]).directive(\"basinSearch\",[\"$log\",\"$timeout\",\"basinService\",function(e,t,n){return{restrict:\"AE\",transclude:!0,templateUrl:\"searches/basinsearch/basinsearch.html\",link:function(a,r){function o(){t.cancel(s),s=t(function(){e.info(\"Clear filter\"),a.nameFilter=\"\"},7e3)}var s;n.load().then(function(e){a.basinData=e}),a.changing=function(){e.info(\"Cancel close\"),t.cancel(s)},a.cancel=o,a.zoomToLocation=function(e){n.zoomToLocation(e),o()}}}}]).provider(\"basinService\",t).filter(\"basinFilterList\",function(){return function(e,t,n){var a,r,o=[];return t?(n||(n=50),a=t.toLowerCase(),e&&(r=0,e.some(function(e){return e.name.toLowerCase().indexOf(a)>-1&&(o.push(e),r++),r>n})),o):o}})}(angular),function(e,t){\"use strict\";e.module(\"exp.search.geosearch\",[\"ngAutocomplete\"]).directive(\"geoSearch\",[\"$log\",\"$q\",\"$rootScope\",\"googleService\",\"searchMapService\",function(e,t,n,a,r){var o=.1;return{templateUrl:\"searches/geosearch/geosearch.html\",controller:[\"$scope\",function(t){t.values={from:{}},t.zoom=function(s){t.values.from.description&&a.getAddressDetails(t.values.from.description,t).then(function(a){function s(){r.goTo(p)}var i={type:\"Feature\",geometry:{type:\"Point\",coordinates:[a.lat,a.lon]},properties:{name:a.address}},c={from:\"Google search\",name:a.address,type:\"GeoJSONPoint\",pan:function(){s()},data:i},l=a.lon-o,u=a.lon+o,d=a.lat-o,h=a.lat+o,p={type:\"Polygon\",coordinates:[[[l,d],[l,h],[u,h],[u,d],[l,d]]]};return e.debug(\"Received the results for from\"),t.values.from.results=a,a&&(s(),n.$broadcast(\"search.performed\",c)),t.item=\"\",a},function(t){e.debug(\"Failed to complete the from lookup.\")})}}]}}]).factory(\"googleService\",[\"$log\",\"$q\",function(e,n){var a,r=new t.maps.Geocoder;try{a=new t.maps.places.AutocompleteService(null,{types:[\"geocode\"]})}catch(o){e.debug(\"Catching google error that manifests itself when debugging in Firefox only\")}return{getAddressDetails:function(e,a){var o=n.defer();return r.geocode({address:e,region:\"au\"},function(e,n){n!=t.maps.GeocoderStatus.OK?a.$apply(function(){o.reject(\"Failed to find address\")}):a.$apply(function(){o.resolve({lat:e[0].geometry.location.lat(),lon:e[0].geometry.location.lng(),address:e[0].formatted_address})})}),o.promise}}}])}(angular,google),function(e){\"use strict\";e.module(\"exp.search.lastsearch\",[]).directive(\"expLastSearch\",[\"$document\",\"lastSearchService\",function(e,t){return{restrict:\"AE\",transclude:!0,templateUrl:\"searches/lastsearch/lastsearch.html\",link:function(n,a){function r(e){27==e.which&&(e.stopPropagation(),e.preventDefault(),n.$apply(function(){n.close()}))}n.data=t.data(),e.on(\"keyup\",r),n.toggle=function(){(n.data.search.displayed=!n.data.search.displayed)?t.show():t.hide()},n.pan=function(){n.data.search.pan()},n.close=function(){t.clear()}}}}]).provider(\"lastSearchService\",[function(){var e=!0;this.noListen=function(){e=!1},this.$get=[\"$log\",\"$rootScope\",\"searchMapService\",function(t,n,a){function r(t,n){o&&o.destroy(),o=a.getDrawer(n),e&&(s.search=n),n.show&&(n.displayed=!0,o.draw())}var o,s={search:null},i={show:function(){o.draw()},hide:function(){o&&o.erase()},data:function(){return s},isShowing:function(){o.isDrawn()},clear:function(){this.hide(),s.search=null}};return n.$on(\"search.performed\",r),i}]}])}(angular),function(e){\"use strict\";function t(){var e=\"service/lgasearch/states\",t=\"service/lgasearch/lgas\",n=\"service/lgasearch/lga/\",a={};this.setReferenceUrl=function(e){t=e},this.setShapeUrl=function(e){n=e},this.$get=[\"$q\",\"$rootScope\",\"$timeout\",\"httpData\",\"searchMapService\",function(r,o,s,i,c){var l={load:function(){return i.get(t,{cache:!0}).then(function(e){a.lgas=e.data.lgas}),i.get(e,{cache:!0}).then(function(e){a.states=e.data.states}),r.when(a)},zoomToLocation:function(e){function t(){c.goTo(r)}var a=e.bbox,r={type:\"Polygon\",coordinates:[[[a.xMin,a.yMin],[a.xMin,a.yMax],[a.xMax,a.yMax],[a.xMax,a.yMin],[a.xMin,a.yMin]]]},s={from:\"LGA search\",type:\"GeoJSONUrl\",url:n+e.id+\"/geojson\",pan:t,show:!0,name:e.name,polygon:r};e.id&&o.$broadcast(\"search.performed\",s),t()}};return l}]}e.module(\"exp.search.lgasearch\",[]).directive(\"lgaSearch\",[\"$log\",\"$timeout\",\"lgaService\",function(e,t,n){return{restrict:\"AE\",transclude:!0,templateUrl:\"searches/lgasearch/lgasearch.html\",link:function(a,r){function o(){t.cancel(s),s=t(function(){e.info(\"Clear filter\"),a.nameFilter=\"\"},7e3)}var s;n.load().then(function(e){a.lgaData=e}),a.changing=function(){e.info(\"Cancel close\"),t.cancel(s)},a.cancel=o,a.zoomToLocation=function(e){n.zoomToLocation(e),o()}}}}]).provider(\"lgaService\",t).filter(\"lgaFilterList\",function(){return function(e,t,n){var a,r,o=[];return t?(n||(n=50),a=t.toLowerCase(),e&&(r=0,e.some(function(e){return e.name.toLowerCase().indexOf(a)>-1&&(o.push(e),r++),r>n})),o):o}})}(angular);var explorer;!function(e){var t;!function(e){\"use strict\";angular.module(\"exp.search.searches\",[\"exp.search.lastsearch\"]).directive(\"searchSearches\",[\"searchService\",function(e){return{restrict:\"AE\",replace:!0,transclude:!0,templateUrl:\"searches/searches/searches.html\",scope:{name:\"@\"},controller:[\"$scope\",function(t){function n(n){t.state.searches.forEach(function(e){e.active=!1}),n.active=!0,t.name&&(e.getSearches()[t.name]=n)}t.state={showSearchButton:!0,searches:[]},t[\"switch\"]=function(e){n(e)},this.add=function(e){console.log(\"Adding\"),t.state.searches.push(e)},this.active=function(e){n(e)}}]}}]).directive(\"searchSearch\",function(){return{template:\"<div ng-transclude ng-show='active'></div>\",transclude:!0,require:\"^searchSearches\",scope:{label:\"@\",key:\"@\",active:\"=default?\"},link:function(e,t,n,a){a.add(e)}}}).factory(\"searchService\",[function(){var e={},t={};return t.getSearches=function(){return e},t}])}(t=e.search||(e.search={}))}(explorer||(explorer={})),angular.module(\"exp.search.templates\",[]).run([\"$templateCache\",function(e){e.put(\"searches/basinsearch/basinsearch.html\",'<div class=\"btn-group pull-left radSearch\" style=\"position:relative;width:27em;opacity:0.9\">\\r\\n\t<div class=\"input-group\" style=\"width:100%;\">\\r\\n\t\t<input type=\"text\" size=\"32\" class=\"form-control\" style=\"border-top-right-radius:4px;border-bottom-right-radius:4px;\" \\r\\n\t\t\t\tng-keyup=\"keyup($event)\" ng-focus=\"changing()\" ng-model=\"nameFilter\" placeholder=\"Find a basin of interest\">\\r\\n\t\t<div class=\"input-group-btn\"></div>\\r\\n\t</div>\\r\\n\t<div style=\"width:26em; position:absolute;left:15px\">\t\\r\\n\t\t<div class=\"row\" ng-repeat=\"region in basinData.basins | basinFilterList : nameFilter : 10 | orderBy : \\'name\\'\" \\r\\n\t\t\t\tstyle=\"background-color:white;\">\\r\\n\t\t\t<div class=\"col-md-12 rw-sub-list-trigger\">\\r\\n\t\t\t\t<button class=\"undecorated zoomButton\" ng-click=\"zoomToLocation(region);\">{{region.name}}</button>\\r\\n\t\t\t</div>\t\\r\\n\t\t</div>\\r\\n\t</div>\\r\\n</div>'),e.put(\"searches/geosearch/geosearch.html\",'<div class=\"btn-group pull-left radSearch\" style=\"width:27em;opacity:0.9\">\\r\\n\t<div class=\"input-group\">\\r\\n\t\t<input type=\"text\" ng-autocomplete ng-model=\"values.from.description\" options=\\'{country:\"au\"}\\'\\r\\n\t\t\t\t\tsize=\"32\" title=\"Select a locality to pan the map to.\" class=\"form-control\" aria-label=\"...\">\\r\\n\t\t<div class=\"input-group-btn\">\\r\\n\t\t\t<button ng-click=\"zoom(false)\" exp-ga=\"[\\'send\\', \\'event\\', \\'radwaste\\', \\'click\\', \\'zoom to location\\']\"\\r\\n\t\t\t\tclass=\"btn btn-default\"\\r\\n\t\t\t\ttitle=\"Pan and potentially zoom to location.\"><i class=\"fa fa-search\"></i></button>\\r\\n\t\t</div>\\r\\n\t</div>\\r\\n</div>'),e.put(\"searches/lastsearch/lastsearch.html\",'<div style=\"padding:3px;padding-left:10px;position:relative\" ng-class-even=\"\\'even\\'\" ng-class-odd=\"\\'active\\'\">\\r\\n\t<div class=\"pull-left\">\\r\\n\t\t\t<div style=\"font-size:120%;padding-bottom:7px\">Result from: {{data.search.from}}</div>\\r\\n\t\t\t<div ng-if=\"data.search.type == \\'GeoJSONPoint\\'\">\\r\\n\t\t\t\t{{data.search.name}} (Lat {{data.search.data.geometry.coordinates[0] | number : 5}}&#176; Lng  {{data.search.data.geometry.coordinates[1] | number : 5}}&#176;)\\r\\n\t\t\t</div>\\r\\n\t\t\t<div ng-if=\"data.search.type == \\'GeoJSONUrl\\'\">\\r\\n\t\t\t\t{{data.search.name}} \\r\\n\t\t\t</div>\\r\\n\t\t\t<div class=\"pull-right\">\\r\\n\t\t\t\t<button class=\"undecorated\" ng-click=\"dismiss()\">\\r\\n\t\t\t\t\t<i class=\"fa fa-cross\"></i>\\r\\n\t\t\t\t</button>\\r\\n\t\t\t</div>\\r\\n\t</div>\\r\\n\t<div style=\"padding-left:10px\" class=\"pull-right\">\\r\\n\t\t<button class=\"undecorated\" class=\"featureLink\" title=\"Show on map\" \\r\\n\t\t\tng-click=\"toggle()\"><i class=\"fa fa-lg\" ng-class=\"{\\'fa-eye-slash\\':(!data.search.displayed), \\'fa-eye\\':data.search.displayed}\"></i></button>\\r\\n\t\t<button class=\"undecorated\" class=\"featureLink\" title=\"Pan map to region\" \\r\\n\t\t\tng-click=\"pan()\"><i class=\"fa fa-flag fa-lg\"></i></button>\t\t\t\t\t\t\t\\r\\n\t\t<button class=\"undecorated\" class=\"featureLink\" title=\"Clear search/New search\" \\r\\n\t\t\tng-click=\"close()\"><i class=\"fa fa-close fa-lg\"></i></button>\t\t\t\t\t\t\t\\r\\n\t</div>\\r\\n</div>\\r\\n'),e.put(\"searches/lgasearch/lgasearch.html\",'<div class=\"btn-group pull-left radSearch\" style=\"position:relative;width:27em;opacity:0.9\">\\r\\n\t<div class=\"input-group\" style=\"width:100%;\">\\r\\n\t\t<input type=\"text\" size=\"32\" class=\"form-control\" style=\"border-top-right-radius:4px;border-bottom-right-radius:4px;\" \\r\\n\t\t\t\tng-keyup=\"keyup($event)\" ng-focus=\"changing()\" ng-model=\"nameFilter\" placeholder=\"Find a state or local government area\">\\r\\n\t\t<div class=\"input-group-btn\"></div>\\r\\n\t</div>\\r\\n\t<div style=\"width:26em; position:absolute;left:15px\">\t\\r\\n\t\t<div class=\"lgaLists\">\\r\\n\t\t\t<div class=\"row stateList includeMe\" ng-repeat=\"state in lgaData.states | lgaFilterList : nameFilter | orderBy : \\'name\\'\" \\r\\n\t\t\t\t\tstyle=\"background-color:white;\">\\r\\n\t\t\t\t<div class=\"col-md-12 \">\\r\\n\t\t\t\t\t<button class=\"undecorated zoomButton\" ng-click=\"zoomToLocation(state);\">{{state.name}}</button>\\r\\n\t\t\t\t</div>\\r\\n\t\t\t</div>\t\\r\\n\t\t</div>\\r\\n\t\t<div class=\"row\" ng-repeat=\"region in lgaData.lgas | lgaFilterList : nameFilter : 10 | orderBy : \\'name\\'\" \\r\\n\t\t\t\tstyle=\"background-color:white;\">\\r\\n\t\t\t<div class=\"col-md-12 rw-sub-list-trigger\">\\r\\n\t\t\t\t<button class=\"undecorated zoomButton\" ng-click=\"zoomToLocation(region);\">{{region.name}}</button>\\r\\n\t\t\t</div>\t\\r\\n\t\t</div>\\r\\n\t</div>\\r\\n</div>'),e.put(\"searches/searches/searches.html\",'<div class=\"searchesContainer\">\\r\\n\t<div ng-hide=\"data.search\">\\r\\n\t\t<span class=\"searchesItems\" ng-transclude></span>\\r\\n\t\t<span class=\"dropdown clearfix\">\\r\\n\t\t\t<div class=\"btn-group\" role=\"group\">\\r\\n\t\t\t\t<div class=\"btn-group\" role=\"group\">\\r\\n\t\t\t\t\t<button class=\"btn btn-default dropdown-toggle\" type=\"button\" id=\"searchesDropdownMenu3\" \\r\\n\t\t\t\t\t\t\ttooltip=\"Change search type\" tooltip-append-to-body=\"true\"\\r\\n\t\t\t\t\t\t\tdata-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\\r\\n\t\t      \t\t\t<i class=\"fa fa-align-justify\"></i>\\r\\n   \t\t\t\t\t</button>\\r\\n   \t\t\t\t\t<ul class=\"dropdown-menu\" aria-labelledby=\"searchesDropdownMenu3\">\\r\\n\t    \t    \t\t<li ng-repeat=\"search in state.searches\"><button class=\"undecorated\" ng-click=\"switch(search)\" ng-class=\"{searchesStrong:search.active}\">{{search.label}}</button></li>\\r\\n   \t\t\t\t\t</ul>\\r\\n   \t\t\t\t</div>\\r\\n   \t\t\t</div>\\r\\n\t\t</span>\\r\\n\t</div>\\r\\n\t<div class=\"searchesLastSearchContainer\" exp-last-search ng-show=\"data.search\"></div>\\r\\n</div>')}]);\n//# sourceMappingURL=searches.min.js.map\n","/// <reference path=\"../../../typings/tsd.d.ts\" />\r\n\r\n/*\r\n * Copyright 2015 Geoscience Australia (http://www.ga.gov.au/copyright.html)\r\n */\r\n\r\n\r\n(function(angular: ng.IAngularStatic) {\r\n\r\n\t'use strict';\r\n\r\n\tangular.module(\"exp.search.basinsearch\", ['exp.search.map.service'])\r\n\r\n\t\t.directive(\"basinSearch\", ['$log', '$timeout', 'basinService', function($log: any, $timeout: any, basinService: any) {\r\n\t\t\treturn {\r\n\t\t\t\trestrict: \"AE\",\r\n\t\t\t\ttransclude: true,\r\n\t\t\t\ttemplateUrl: \"searches/basinsearch/basinsearch.html\",\r\n\t\t\t\tlink: function(scope: any, element: any) {\r\n\t\t\t\t\tvar timeout: any;\r\n\r\n\t\t\t\t\tbasinService.load().then(function(data: any): void {\r\n\t\t\t\t\t\tscope.basinData = data;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tscope.changing = function(): void {\r\n\t\t\t\t\t\t$log.info(\"Cancel close\");\r\n\t\t\t\t\t\t$timeout.cancel(timeout);\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tscope.cancel = cancel;\r\n\r\n\t\t\t\t\tscope.zoomToLocation = function(region: any): void {\r\n\t\t\t\t\t\tbasinService.zoomToLocation(region);\r\n\t\t\t\t\t\tcancel();\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tfunction cancel(): void {\r\n\t\t\t\t\t\t$timeout.cancel(timeout);\r\n\t\t\t\t\t\ttimeout = $timeout(function() {\r\n\t\t\t\t\t\t\t$log.info(\"Clear filter\");\r\n\t\t\t\t\t\t\tscope.nameFilter = \"\";\r\n\t\t\t\t\t\t}, 7000);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}])\r\n\r\n\t\t.provider(\"basinService\", BasinsearchServiceProvider)\r\n\r\n\t\t.filter(\"basinFilterList\", function() {\r\n\t\t\treturn function(list: any, filter: any, max: number) {\r\n\t\t\t\tvar response: any[] = [],\r\n\t\t\t\t\tlowerFilter: any, count: number;\r\n\r\n\t\t\t\tif (!filter) {\r\n\t\t\t\t\treturn response;\r\n\t\t\t\t}\r\n\t\t\t\tif (!max) {\r\n\t\t\t\t\tmax = 50;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlowerFilter = filter.toLowerCase();\r\n\r\n\t\t\t\tif (list) {\r\n\t\t\t\t\tcount = 0;\r\n\t\t\t\t\tlist.some(function(item: any) {\r\n\t\t\t\t\t\tif (item.name.toLowerCase().indexOf(lowerFilter) > -1) {\r\n\t\t\t\t\t\t\tresponse.push(item);\r\n\t\t\t\t\t\t\tcount++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn count > max;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\treturn response;\r\n\t\t\t};\r\n\t\t});\r\n\r\n\tfunction BasinsearchServiceProvider() : any {\r\n\t\tvar basinsUrl: string = \"service/basinsearch/basins\",\r\n\t\t\tbasinShapeUrl: string = \"service/basinsearch/basin/\",\r\n\t\t\tbaseUrl: string = '',\r\n\t\t\tbasinData: any = {};\r\n\r\n\t\tthis.setReferenceUrl = function(url: string) {\r\n\t\t\tbasinsUrl = url;\r\n\t\t};\r\n\r\n\t\tthis.setShapeUrl = function(url: string) {\r\n\t\t\tbasinShapeUrl = url;\r\n\t\t};\r\n\r\n\t\tthis.setBaseUrl = function(url: string) {\r\n\t\t\tbaseUrl = url;\r\n\t\t};\r\n\r\n\t\tthis.$get = ['$q', '$rootScope', '$timeout', 'httpData', 'searchMapService',\r\n\t\t\t\tfunction basinServiceFactory($q: any, $rootScope:any, $timeout: any, httpData: any, searchMapService: Searches.ISearchMapService) {\r\n\t\t\tvar service: any = {\r\n\t\t\t\tload: function() {\r\n\t\t\t\t\treturn httpData.get(baseUrl + basinsUrl, { cache: true }).then(function(response: any) {\r\n\t\t\t\t\t\tbasinData.basins = response.data.basins;\r\n\t\t\t\t\t\treturn basinData;\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\r\n\t\t\t\tzoomToLocation: function(region: any) {\r\n\t\t\t\t\tvar bbox: any = region.bbox;\r\n\t\t\t\t\tvar polygon: GeoJSON.Polygon = {\r\n\t\t\t\t\t\ttype: \"Polygon\",\r\n\t\t\t\t\t\tcoordinates: [[\r\n\t\t\t\t\t\t\t[bbox.xMin, bbox.yMin],\r\n\t\t\t\t\t\t\t[bbox.xMin, bbox.yMax],\r\n\t\t\t\t\t\t\t[bbox.xMax, bbox.yMax],\r\n\t\t\t\t\t\t\t[bbox.xMax, bbox.yMin],\r\n\t\t\t\t\t\t\t[bbox.xMin, bbox.yMin]\r\n\t\t\t\t\t\t]]\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tvar broadcastData: Searches.ISearchPerformed = {\r\n                      \tfrom: \"Basins search\",\r\n                      \ttype: \"GeoJSONUrl\",\r\n                      \turl: baseUrl + basinShapeUrl + region.id,\r\n\t\t\t \t\t\tpan: pan,\r\n\t\t\t\t\t\tshow: true,\r\n                        name: region.name,\r\n                        polygon: polygon\r\n\t\t\t\t\t};\r\n\r\n                    $rootScope.$broadcast('search.performed', broadcastData);\r\n\r\n\t\t\t\t\tpan();\r\n\r\n\t\t\t\t\tfunction pan() {\r\n\t\t\t\t\t\tsearchMapService.goTo(polygon);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\treturn service;\r\n\t\t}];\r\n\t}\r\n\r\n})(angular);\r\n","/// <reference path=\"../../../typings/tsd.d.ts\" />\r\n\r\n/*\r\n * Copyright 2015 Geoscience Australia (http://www.ga.gov.au/copyright.html)\r\n */\r\n\r\ndeclare var google: any;\r\n\r\ninterface IGeoSearchResults {\r\n    address: string;\r\n    lat: number;\r\n    lon: number;\r\n}\r\n\r\n(function(angular: ng.IAngularStatic, google:any) {\r\n\r\n'use strict';\r\n\r\n\r\nangular.module('exp.search.geosearch', ['ngAutocomplete'])\r\n\r\n.directive('geoSearch', ['$log', '$q', '$rootScope', 'googleService', 'searchMapService',\r\n                       function($log : any, $q : any, $rootScope:any, googleService : any, searchMapService:any) {\r\n    var SPREAD_DEGREES : number = 0.1;\r\n    return {\r\n        templateUrl : 'searches/geosearch/geosearch.html',\r\n        controller:['$scope', function($scope : any) {\r\n            // Place holders for the google response.\r\n            $scope.values = {\r\n                from:{}\r\n            };\r\n\r\n            $scope.zoom = function(marker : any) {\r\n                var promise:any,\r\n                    promises:any = [];\r\n\r\n                if(!$scope.values.from.description) {\r\n                    return;\r\n                }\r\n\r\n                googleService.getAddressDetails($scope.values.from.description, $scope).then(function(results: IGeoSearchResults) {\r\n                    var feature: GeoJSON.Feature = {\r\n                        type: 'Feature',\r\n                        geometry: {\r\n                            type: 'Point',\r\n                            coordinates: [results.lat, results.lon],\r\n                        },\r\n                        properties: {\r\n                            name: results.address\r\n                        }\r\n                    };\r\n\r\n                    var broadcastData: Searches.ISearchPerformed = {\r\n                        from: \"Google search\",\r\n                        name: results.address,\r\n                        type: \"GeoJSONPoint\",\r\n                        pan: function() {\r\n                          pan();\r\n                        },\r\n                        data: feature\r\n                    };\r\n                    var xMin = results.lon - SPREAD_DEGREES;\r\n                    var xMax = results.lon + SPREAD_DEGREES;\r\n                    var yMin = results.lat - SPREAD_DEGREES;\r\n                    var yMax = results.lat + SPREAD_DEGREES;\r\n\r\n\t\t\t\t\tvar polygon: GeoJSON.Polygon = {\r\n\t\t\t\t\t\ttype: \"Polygon\",\r\n\t\t\t\t\t\tcoordinates: [[\r\n\t\t\t\t\t\t\t[xMin, yMin],\r\n\t\t\t\t\t\t\t[xMin, yMax],\r\n\t\t\t\t\t\t\t[xMax, yMax],\r\n\t\t\t\t\t\t\t[xMax, yMin],\r\n\t\t\t\t\t\t\t[xMin, yMin]\r\n\t\t\t\t\t\t]]\r\n\t\t\t\t\t};\r\n\r\n                    $log.debug('Received the results for from');\r\n                    $scope.values.from.results = results;\r\n                    if(results) {\r\n                        pan();\r\n                        $rootScope.$broadcast('search.performed', broadcastData);\r\n                    }\r\n                    // Hide the dialog.\r\n                    $scope.item = '';\r\n                    return results;\r\n\r\n                    function pan() {\r\n                        searchMapService.goTo(polygon);\r\n                    }\r\n                }, function(error:any) {\r\n                    $log.debug('Failed to complete the from lookup.');\r\n                })\r\n            };\r\n        }]\r\n    };\r\n}])\r\n\r\n.factory('googleService', ['$log', '$q', function($log : any, $q : any) {\r\n    var geocoder:any = new google.maps.Geocoder(),\r\n        service:any;\r\n    try {\r\n        service = new google.maps.places.AutocompleteService(null, {\r\n                        types: ['geocode']\r\n                    });\r\n    } catch(e) {\r\n        $log.debug(\"Catching google error that manifests itself when debugging in Firefox only\");\r\n    }\r\n\r\n    return {\r\n        getAddressDetails: function(address:any, digester:any) {\r\n            var deferred = $q.defer();\r\n            geocoder.geocode({ address: address, region: \"au\" }, function(results:any, status:any) {\r\n                if (status != google.maps.GeocoderStatus.OK) {\r\n                    digester.$apply(function() {\r\n                        deferred.reject(\"Failed to find address\");\r\n                    });\r\n                } else {\r\n                    digester.$apply(function() {\r\n                        deferred.resolve({\r\n                            lat: results[0].geometry.location.lat(),\r\n                            lon: results[0].geometry.location.lng(),\r\n                            address: results[0].formatted_address\r\n                        });\r\n                    });\r\n                }\r\n            });\r\n            return deferred.promise;\r\n        }\r\n    };\r\n}]);\r\n\r\n})(angular, google);\r\n","/// <reference path=\"../../../typings/tsd.d.ts\" />\r\n/*\r\n * Copyright 2015 Geoscience Australia (http://www.ga.gov.au/copyright.html)\r\n */\r\n\r\ninterface LastSearchService {\r\n  show(): void;\r\n  hide(): void;\r\n  data: any;\r\n  clear(): void;\r\n  viewer: any;\r\n}\r\n\r\ninterface LastSearchData {\r\n  search: any;\r\n}\r\n\r\n(function(angular: ng.IAngularStatic) {\r\n'use strict';\r\n\r\n/*\r\n * Wiring\r\n */\r\nangular.module('exp.search.lastsearch', [])\r\n\r\n.directive('expLastSearch', ['$document', 'lastSearchService',\r\n          function($document: any, lastSearchService: LastSearchService) {\r\n  return {\r\n    restrict : 'AE',\r\n    transclude : true,\r\n    templateUrl: 'searches/lastsearch/lastsearch.html',\r\n    link : function(scope:any, element:any) {\r\n      scope.data = lastSearchService.data();\r\n      \r\n      $document.on(\"keyup\", keyupHandler);\r\n\r\n      scope.toggle = function () {\r\n        if ((scope.data.search.displayed = !scope.data.search.displayed)) {\r\n          lastSearchService.show();\r\n        } else {\r\n          lastSearchService.hide();\r\n        }\r\n      };\r\n      \r\n      scope.pan = function() {\r\n        scope.data.search.pan();\r\n      }\r\n      \r\n      scope.close = function() {        \r\n          lastSearchService.clear();\r\n      }\r\n      \r\n      function keyupHandler(keyEvent: any) {\r\n    \t\t\tif(keyEvent.which == 27) {\r\n    \t\t\t\tkeyEvent.stopPropagation();\r\n    \t\t\t\tkeyEvent.preventDefault();\r\n    \t\t\t\tscope.$apply(function() {\r\n        \t\t\t\tscope.close();\r\n    \t\t\t\t});\r\n    \t\t\t}\r\n    \t\t}\r\n    }\r\n  };\r\n}]) \r\n\r\n.provider('lastSearchService', [function () {\r\n    var listen = true;\r\n    \r\n    this.noListen = function() {\r\n      listen = false;\r\n    }\r\n    \r\n    this.$get = ['$log', '$rootScope', 'searchMapService', function ($log: ng.ILogService, $rootScope: ng.IRootScopeService, searchMapService: any) {\r\n    \r\n      var data:LastSearchData = {\r\n        search: null\r\n      };\r\n      var drawing: any;\r\n    \r\n      var service = {\r\n        show: function() {\r\n          drawing.draw();\r\n        },\r\n    \r\n        hide: function() {\r\n          if(drawing) {\r\n            drawing.erase();\r\n          }       \r\n        },\r\n        data: function() {\r\n          return data;\r\n        },\r\n      \r\n        isShowing: function() {\r\n          drawing.isDrawn();\r\n        },\r\n      \r\n        clear: function (){\r\n          this.hide();\r\n          data.search = null;\r\n        }\r\n    };\r\n    \r\n    $rootScope.$on('search.performed', listener);\r\n    \r\n    function listener(event: any, search: any) {\r\n      if (drawing) {\r\n        drawing.destroy();\r\n      }\r\n      drawing = searchMapService.getDrawer(search);\r\n      if(listen) {\r\n        data.search = search;\r\n      }\r\n          \r\n      if (search.show) {\r\n        search.displayed = true;\r\n        drawing.draw();\r\n      }\r\n    };\r\n   \r\n    return service;\r\n  }];\r\n}]);\r\n\r\n})(angular);\r\n","/// <reference path=\"../../../typings/tsd.d.ts\" />\r\n\r\n/*\r\n * Copyright 2015 Geoscience Australia (http://www.ga.gov.au/copyright.html)\r\n */\r\n\r\n\r\nmodule explorer.search {\r\n'use strict';\r\n\r\nangular.module(\"exp.search.searches\", ['exp.search.lastsearch'])\r\n\r\n.directive('searchSearches', ['searchService', function(searchService: any) {\r\n    return {\r\n        restrict: \"AE\",\r\n        replace: true,\r\n        transclude: true,\r\n        templateUrl: 'searches/searches/searches.html',\r\n        scope: {\r\n            name : \"@\"\r\n        },\r\n        controller: ['$scope', function($scope:any) {\r\n            $scope.state = {\r\n                showSearchButton : true,\r\n                searches : []\r\n            }\r\n                    \r\n            $scope.switch = function (data:any) {\r\n                activate(data);\r\n            };\r\n            \r\n            this.add = function (data:any) {\r\n                console.log(\"Adding\");\r\n                $scope.state.searches.push(data);\r\n            };\r\n            \r\n            this.active = function (data:any) {\r\n                activate(data);\r\n            };        \r\n            \r\n            function activate(data:any) {\r\n                $scope.state.searches.forEach(function (item:any) {\r\n                    item.active = false;\r\n                });\r\n                data.active = true;\r\n                if($scope.name) {\r\n                    searchService.getSearches()[$scope.name] = data;\r\n                }                        \r\n            }\r\n        }]\r\n    };\r\n}]) \r\n\r\n.directive('searchSearch', function() {\r\n    return {\r\n        //replace : true,\r\n        template:\"<div ng-transclude ng-show='active'></div>\",\r\n        transclude:true,\r\n        require: \"^searchSearches\",\r\n        scope: {\r\n            label: \"@\",\r\n            key: \"@\"\r\n        },\r\n        link : function(scope:any, element: any, attrs: any, ctrl: any) {\r\n           scope.active = !!attrs.default;\r\n            ctrl.add(scope); \r\n        }\r\n    };\r\n})\r\n    \r\n.factory('searchService', [function() {\r\n    var searches: any = {};\r\n    var service: any = {};\r\n    \r\n    service.getSearches = function() {\r\n      return searches;  \r\n    };\r\n    \r\n    return service;\r\n}]);\r\n   \r\n}","/// <reference path=\"../../../typings/tsd.d.ts\" />\r\n/*\r\n * Copyright 2015 Geoscience Australia (http://www.ga.gov.au/copyright.html)\r\n */\r\n\r\n(function(angular: ng.IAngularStatic) {\r\n'use strict';   \r\n\r\nangular.module(\"exp.search.lgasearch\", [])\r\n\r\n.directive(\"lgaSearch\", ['$log', '$timeout', 'lgaService', function($log:any, $timeout:any, lgaService:any) {\r\n    return {\r\n        restrict : \"AE\",\r\n        transclude:true,\r\n        templateUrl : \"searches/lgasearch/lgasearch.html\", \r\n        link : function(scope:any, element:any) {\r\n            var timeout:any;\r\n            \r\n            lgaService.load().then(function(data:any) :void {\r\n                scope.lgaData = data;\r\n            });\r\n            \r\n            scope.changing = function():void {\r\n                $log.info(\"Cancel close\");\r\n                $timeout.cancel(timeout);\r\n            };\r\n            \r\n            scope.cancel = cancel;\r\n            \r\n            scope.zoomToLocation = function(region:any) : void {\r\n                lgaService.zoomToLocation(region);\r\n                cancel();\r\n            };\r\n            \r\n            function cancel():void {\r\n                $timeout.cancel(timeout);\r\n                timeout = $timeout(function() {\r\n                    $log.info(\"Clear filter\");\r\n                    scope.nameFilter = \"\";\r\n                }, 7000);               \r\n            }\r\n        }\r\n    };\r\n}])\r\n\r\n.provider(\"lgaService\", LgasearchServiceProvider)\r\n\r\n.filter(\"lgaFilterList\", function() {\r\n    return function(list:any, filter:any, max:number) {\r\n        var response:any[] = [],\r\n            lowerFilter:any, count:number;\r\n        \r\n        if(!filter) {\r\n            return response;\r\n        }\r\n        if(!max) {\r\n            max = 50;\r\n        }\r\n        \r\n        lowerFilter = filter.toLowerCase();\r\n        \r\n        if(list) {\r\n            count = 0;\r\n            list.some(function(item:any) {\r\n                if(item.name.toLowerCase().indexOf(lowerFilter) > -1) {\r\n                    response.push(item);\r\n                    count++;\r\n                }\r\n                return count > max;\r\n            });\r\n        }\r\n        return response;\r\n    };\r\n});\r\n\r\nfunction LgasearchServiceProvider() : any {\r\n    var statesUrl:string = \"service/lgasearch/states\",\r\n        lgasUrl:string = \"service/lgasearch/lgas\",\r\n        lgaShapeUrl:string = \"service/lgasearch/lga/\",\r\n        lgaData:any = {},\r\n        lgaTimeout:any,\r\n        lgaLayer:any,\r\n        lgaFadeLayer:any, \r\n        removePrimitiveTimeout : any,\r\n        scene : any;\r\n    \r\n    this.setReferenceUrl = function(url:string) {\r\n        lgasUrl = url;\r\n    };  \r\n    \r\n    this.setShapeUrl = function(url:string) {\r\n        lgaShapeUrl = url;\r\n    };  \r\n    \r\n    this.$get = ['$q', '$rootScope', '$timeout', 'httpData', 'searchMapService', function lgaServiceFactory($q:any, $rootScope:any, $timeout:any, httpData:any, searchMapService:any) {\r\n        var service:any = {\r\n            load : function() {\r\n                httpData.get(lgasUrl, {cache : true}).then(function(response:any) {\r\n                    lgaData.lgas = response.data.lgas;\r\n                }); \r\n                \r\n                httpData.get(statesUrl, {cache : true}).then(function(response:any) {\r\n                    lgaData.states = response.data.states;\r\n                });\r\n                return $q.when(lgaData);\r\n            },\r\n            \r\n            zoomToLocation : function(region:any) {                \r\n                var bbox:any = region.bbox;\r\n                \r\n\t\t\t\tvar polygon: GeoJSON.Polygon = {\r\n\t\t\t\t\ttype: \"Polygon\",\r\n\t\t\t\t\tcoordinates: [[\r\n\t\t\t\t\t\t[bbox.xMin, bbox.yMin],\r\n\t\t\t\t\t\t[bbox.xMin, bbox.yMax],\r\n\t\t\t\t\t\t[bbox.xMax, bbox.yMax],\r\n\t\t\t\t\t\t[bbox.xMax, bbox.yMin],\r\n\t\t\t\t\t\t[bbox.xMin, bbox.yMin]\r\n\t\t\t\t\t]]\r\n\t\t\t\t};\r\n                \r\n                var broadcastData: Searches.ISearchPerformed = {\r\n                   from: \"LGA search\",\r\n                   type: \"GeoJSONUrl\",\r\n                   url: lgaShapeUrl + region.id + '/geojson',\r\n\t\t\t \t   pan: pan,\r\n\t\t\t       show: true,\r\n                   name: region.name,\r\n                   polygon: polygon\r\n\t\t\t    };\r\n                \r\n                if(region.id) {\r\n                    $rootScope.$broadcast('search.performed', broadcastData);\r\n                }\r\n                pan();\r\n                function pan() {\r\n                    searchMapService.goTo(polygon);\r\n                }\r\n            }\r\n        };  \r\n        return service;\r\n    }];\r\n}\r\n})(angular);",null],"sourceRoot":"/source/"}